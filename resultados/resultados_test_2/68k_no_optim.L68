0000107E Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 24/01/2025 10:03:38

00000000                             1  ; Código ensamblador Motorola 68k generado:
00001000                             2      ORG $1000
00001000                             3  ; ------- DECLARACIÓN DE CONSTANTES Y VARIABLES --------
00001000                             4  t4  DS.L    1
00001004                             5  t5  DS.L    1
00001008                             6  t6  DS.L    1
0000100C                             7  t7  DS.L    1
00001010                             8  t8  DS.L    1
00001014                             9  t9  DS.L    1
00001018                            10  t10 DS.L    1
0000101C                            11  ID2 DS.L    1
00001020                            12  ID1 DS.L    1
00001024                            13  ID4 DS.L    1
00001028                            14  ID3 DS.L    1
0000102C                            15  t0  DS.L    1
00001030                            16  t1  DS.L    1
00001034                            17  t2  DS.L    1
00001038                            18  t3  DS.L    1
0000103C= 3E 3E 3E 00               19  INPUT_MARK  DC.B    '>>>',0
00001040                            20  ; -----------------------------------------------------------------------------
00001040                            21  ; Subrutina para la función: L0
00001040                            22  ; -----------------------------------------------------------------------------
00001040                            23  L0:
00001040  48E7 FFFE                 24      MOVEM.L D0-D7/A0-A6,-(A7)   ; Guardar registros
00001044  4280                      25      CLR.L   D0
00001046  202F 0044                 26      MOVE.L  68(SP),D0
0000104A  21C0 1020                 27      MOVE.L  D0,ID1
0000104E  4280                      28      CLR.L   D0
00001050  202F 0048                 29      MOVE.L  72(SP),D0
00001054  21C0 101C                 30      MOVE.L  D0,ID2
00001058  21F8 1020 102C            31      MOVE.L   ID1,t0
0000105E  21F8 101C 1030            32      MOVE.L   ID2,t1
00001064  2038 102C                 33      MOVE.L  t0,D0
00001068  2238 1030                 34      MOVE.L  t1,D1
0000106C  D081                      35      ADD.L   D1,D0
0000106E  21C0 1034                 36      MOVE.L  D0,t2
00001072  2F78 1034 0040            37      MOVE.L  t2,64(SP)
00001078  4CDF 7FFF                 38      MOVEM.L (A7)+,D0-D7/A0-A6   ; Restaurar registros
0000107C  4E75                      39      RTS ; Retornar de la función
0000107E                            40  ; ---- FIN DE LAS SUBRUTINAS ----------------
0000107E                            41  START
0000107E  4EB9 00001196             42      JSR INPUT_INT
00001084  21C1 1024                 43      MOVE.L  D1,ID4
00001088                            44  L1:
00001088  4EB9 00001196             45      JSR INPUT_INT
0000108E  21C1 1028                 46      MOVE.L  D1,ID3
00001092  21F8 1024 1038            47      MOVE.L   ID4,t3
00001098  2038 1038                 48      MOVE.L  t3,D0
0000109C  2F00                      49      MOVE.L  D0,-(SP)
0000109E  21F8 1028 1000            50      MOVE.L   ID3,t4
000010A4  2038 1000                 51      MOVE.L  t4,D0
000010A8  2F00                      52      MOVE.L  D0,-(SP)
000010AA  598F                      53      SUBA.L  #4,SP
000010AC  4EB8 1040                 54      JSR L0
000010B0  21DF 1004                 55      MOVE.L  (SP)+,t5
000010B4  2E7C 01000000             56      MOVE.L  #$01000000,SP
000010BA  21F8 1004 1024            57      MOVE.L   t5,ID4
000010C0  21F8 1024 100C            58      MOVE.L   ID4,t7
000010C6  21FC 000000C8 1010        59      MOVE.L   #200,t8
000010CE  2038 100C                 60      MOVE.L  t7,D0
000010D2  2238 1010                 61      MOVE.L  t8,D1
000010D6  B081                      62      CMP.L   D1,D0
000010D8  6D00 0010                 63      BLT L2
000010DC  21FC 00000000 1014        64      MOVE.L   #0,t9
000010E4  4EF9 000010F2             65      JMP L3
000010EA                            66  L2:
000010EA  21FC FFFFFFFF 1014        67      MOVE.L   #-1,t9
000010F2                            68  L3:
000010F2  2038 1014                 69      MOVE.L  t9,D0
000010F6  7200                      70      MOVE.L  #0,D1
000010F8  B081                      71      CMP.L   D1,D0
000010FA  6700 0006                 72      BEQ L4
000010FE  4EF8 1088                 73      JMP L1
00001102                            74  L4:
00001102  21F8 1024 1018            75      MOVE.L   ID4,t10
00001108  2038 1018                 76      MOVE.L  t10,D0
0000110C  2F00                      77      MOVE.L  D0,-(SP)
0000110E  2F3C 00000000             78      MOVE.L  #0,-(SP)
00001114  4EB9 00001124             79      JSR PRINT_GENERAL
0000111A  2E7C 01000000             80      MOVE.L  #$01000000,SP
00001120  FFFF FFFF                 81      SIMHALT
00001124                            82  ; -----------------------------------------------------------------------------
00001124                            83  PRINT_GENERAL
00001124                            84  ; General Print Subroutine
00001124                            85  ; INPUT: Stack contains items to print, each 4 bytes
00001124                            86  ; OUTPUT: Items are printed one by one
00001124                            87  ; -----------------------------------------------------------------------------
00001124  48E7 F000                 88      MOVEM.L D0-D3,-(A7) ; Guardar D0 y D1
00001128  DFFC 00000014             89      ADDA.L  #20,SP
0000112E                            90  PRINT_LOOP:
0000112E  BFFC 01000000             91      CMP.L   #$01000000,SP
00001134  6700 0046                 92      BEQ PRINT_END   ; Si no hay más elementos, finalizar
00001138  5083                      93      ADD.L   #8,D3
0000113A  241F                      94      MOVE.L  (SP)+,D2
0000113C  221F                      95      MOVE.L  (SP)+,D1
0000113E  B4BC 00000001             96      CMP.L   #1,D2
00001144  6700 0014                 97      BEQ PRINT_BOOLEAN
00001148  303C 0003                 98      MOVE.W  #3,D0
0000114C  4E4F                      99      TRAP    #15
0000114E  227C 00001193            100      MOVEA.L #NEWLINE,A1
00001154  700D                     101      MOVE.L  #13,D0
00001156  4E4F                     102      TRAP    #15
00001158  60D4                     103      BRA PRINT_LOOP
0000115A                           104  PRINT_BOOLEAN:
0000115A  B2BC 000000FF            105      CMP.L   #$FF,D1
00001160  6700 000C                106      BEQ PRINT_TRUE
00001164  43F9 0000118D            107      LEA VALFALSE,A1
0000116A  6000 0008                108      BRA PRINT_STRING
0000116E                           109  PRINT_TRUE:
0000116E  43F9 00001188            110      LEA VALTRUE,A1
00001174                           111  PRINT_STRING:
00001174  303C 000D                112      MOVE.W  #13,D0
00001178  4E4F                     113      TRAP    #15
0000117A  60B2                     114      BRA PRINT_LOOP
0000117C                           115  PRINT_END:
0000117C  9FFC 0000001C            116      SUBA.L  #28,SP
00001182  4CDF 000F                117      MOVEM.L (A7)+,D0-D3 ; Restaurar D1 y D0
00001186  4E75                     118      RTS ; Retornar de la subrutina
00001188= 74 72 75 65 00           119  VALTRUE DC.B    'true',0
0000118D= 66 61 6C 73 65 00        120  VALFALSE    DC.B    'false',0
00001193= 20 00                    121  NEWLINE DC.B    ' ',0
00001196                           122      DS.W    0
00001196                           123  ; ------------------------------------------------------------------------------
00001196                           124  INPUT_INT
00001196                           125  ; General Input Subrutina
00001196                           126  ; INPUT: None
00001196                           127  ; OUTPUT: Reads an integer or value and stores it
00001196  2F00                     128      MOVE.L  D0,-(A7)    ; SAVE D0
00001198  43F8 103C                129      LEA INPUT_MARK,A1
0000119C  700E                     130      MOVE.L  #14,D0
0000119E  4E4F                     131      TRAP    #15
000011A0  4280                     132      CLR.L   D0  ; CLEAR D0
000011A2  4281                     133      CLR.L   D1  ; CLEAR D1
000011A4  7004                     134      MOVE.L  #4,D0   ; READ_INT
000011A6  4E4F                     135      TRAP    #15
000011A8  201F                     136      MOVE.L  (A7)+,D0    
000011AA  4E75                     137      RTS
000011AC                           138  ; -----------------------------------------------------------------------------
000011AC                           139  INPUT_BOOL
000011AC                           140  ; READS A STRING
000011AC                           141  ; INPUT: NONE
000011AC                           142  ; OUTPUT: A1 - STRING READ
000011AC                           143  ; -----------------------------------------------------------------------------
000011AC  2F00                     144      MOVE.L  D0,-(A7)    ; SAVE D0
000011AE  43F8 103C                145      LEA INPUT_MARK,A1
000011B2  700E                     146      MOVE.L  #14,D0
000011B4  4E4F                     147      TRAP    #15
000011B6  4280                     148      CLR.L   D0  ; CLEAR D0
000011B8  2240                     149      MOVE.L  D0, A1  ; CLEAR A1
000011BA  7002                     150      MOVE.L  #2,D0   ; READ_STRING
000011BC  4E4F                     151      TRAP    #15 ; READ_STRING CALL TO OS
000011BE  201F                     152      MOVE.L  (A7)+,D0    ; RESTORE D0
000011C0  4E75                     153      RTS ; RETURN FROM SUBROUTINE
000011C2                           154  ; -----------------------------------------------------------------------------
000011C2                           155  STRING_TO_BOOLEAN
000011C2                           156  ; CONVERTS A STRING TO A BOOLEAN
000011C2                           157  ; ASSERT: INPUT STRING IS:
000011C2                           158  ; TRUE/true OR FALSE/false
000011C2                           159  ; INPUT: A1 - STRING TO CONVERT
000011C2                           160  ; OUTPUT: D1 - BOOLEAN VALUE
000011C2                           161  ; -----------------------------------------------------------------------------
000011C2  48E7 8040                162      MOVEM.L D0/A1,-(A7) ; SAVE D0/A1
000011C6  4280                     163      CLR.L   D0  ; CLEAR D0
000011C8  1011                     164      MOVE.B  (A1),D0 : FIRST CHARACTER
000011CA  B0BC 00000046            165      CMP.L   #'F',D0 ; IS FALSE?
000011D0  6700 0018                166      BEQ .STR_F  ; IS F
000011D4  B0BC 00000066            167      CMP.L   #'f',D0 ; IS FALSE?
000011DA  6700 000E                168      BEQ .STR_F  ; IS f
000011DE  4281                     169      CLR.L   D1
000011E0  123C 00FF                170      MOVE.B  #$FF,D1
000011E4  4EF9 000011EC            171      JMP .STR_END    ; END
000011EA                           172  .STR_F
000011EA  7200                     173      MOVE.L  #0,D1
000011EC                           174  .STR_END
000011EC  4CDF 0201                175      MOVEM.L (A7)+,D0/A1 ; SAVE D0/A1
000011F0  4E75                     176      RTS ; RETURN FROM SUBROUTINE
000011F2                           177      END START

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ID1                 1020
ID2                 101C
ID3                 1028
ID4                 1024
INPUT_BOOL          11AC
INPUT_INT           1196
INPUT_MARK          103C
L0                  1040
L1                  1088
L2                  10EA
L3                  10F2
L4                  1102
NEWLINE             1193
PRINT_BOOLEAN       115A
PRINT_END           117C
PRINT_GENERAL       1124
PRINT_LOOP          112E
PRINT_STRING        1174
PRINT_TRUE          116E
START               107E
STRING_TO_BOOLEAN   11C2
STRING_TO_BOOLEAN:STR_END  11EC
STRING_TO_BOOLEAN:STR_F  11EA
T0                  102C
T1                  1030
T10                 1018
T2                  1034
T3                  1038
T4                  1000
T5                  1004
T6                  1008
T7                  100C
T8                  1010
T9                  1014
VALFALSE            118D
VALTRUE             1188
